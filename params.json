{"name":"Testcontainers-spring-config-server","tagline":"Testcontainers of Spring-Config-Server to use during Integration Tests","body":"# Testcontainers Spring Config Server\r\n## Configuration\r\nAdd the dependency for Testcontainers Spring Config Server in your spring boot application:\r\n\r\n```groovy\r\ntestImplementation 'com.frog-development.testcontainers:testcontainers-config-server:Hoxton.SR6'\r\n```\r\n\r\nN.B.: The tag will use the [Spring Cloud Release](https://github.com/spring-projects/spring-cloud/wiki/Spring-Cloud-Hoxton-Release-Notes) tag, to easily understand what version of spring is used.\r\n\r\nThe auto-configuration will automatically launch 1 container [testcontainers-config-server](https://hub.docker.com/repository/docker/frogdevelopment/testcontainers-config-server) to be used during your integration tests.\r\n\r\n## Customization\r\nHere are the default values embedded by default with the dependency : \r\n```yaml\r\ntestcontainers:\r\n  config-server:\r\n    enabled: true                                             # Enable/Disable configuration of config server on startup.\r\n    docker:\r\n      image: frogdevelopment/testcontainers-config-server     # Docker image to use.\r\n      tag: Hoxton.SR6                                         # Docker tag to use.\r\n    git:\r\n      uri: your_own_git_uri                                   # Remote Git repository to use.\r\n      branch: the_branch_or_tag_I_want_to_use                 # Branch or tag of the repository to use.\r\n      clone-on-start: true                                    # Flag to indicate that the repository should be cloned on startup (not on demand). Generally leads to slower startup but faster first query.\r\n      refresh-rate: 30                                        # Time (in seconds) between refresh of the git repository, defaults to 30 seconds.\r\n      timeout: 15                                             # Timeout (in seconds) for obtaining HTTP or SSH connection (if applicable), defaults to 5 seconds.\r\n    server:\r\n      port: 8888                                # Server HTTP port.\r\n      wait-timeout: 60                          # Duration (in seconds) of waiting time until container treated as started, defaults to 60 seconds\r\n      health-path: /actuator/health             # Path to the actuator health's endpoint, default to \"/actuator/health\".\r\n```\r\n\r\nYou can override any properties by updating or adding _bootstrap-test.yml_ file in _src/test/resources_ spring project path. \r\n\r\nIt is also possible to locally enable/disable the run of the testcontainers by setting the property `testcontainers.config-server.enabled` to false:\r\n```java\r\n@SpringBootTest(properties = {\r\n        \"testcontainers.config-server.enabled=false\",\r\n        \"spring.cloud.config.enabled=false\"\r\n})\r\n```\r\nor\r\n```java\r\n@TestPropertySource(properties = {\r\n        \"testcontainers.config-server.enabled=false\",\r\n        \"spring.cloud.config.enabled=false\"\r\n})\r\n```\r\n\r\n## Running with local spring-config-server instead of Testcontainers\r\n\r\nAs it can take a little more time at the beginning when testing locally, you can disable test containers and use a running locally spring cloud config server.\r\n\r\n_bootstrap-test.yml_\r\n```yaml\r\nspring:\r\n  cloud:\r\n    config:\r\n      uri: http://localhost:8888\r\n      label: the_branch_or_tag_I_want_to_use\r\n\r\ntestcontainers:\r\n  config-server:\r\n    enabled: false\r\n```\r\n\r\nHere is a docker-compose config file to launch a local config server\r\n\r\n_docker-compose.yml_\r\n```yaml\r\n  spring-config-server:\r\n    container_name: spring-config-server\r\n    image: frogdevelopment/testcontainers-config-server:Hoxton.SR6\r\n    ports:\r\n      - 8888:8080\r\n    environment:\r\n      SPRING_CLOUD_CONFIG_SERVER_GIT_URI: your_own_git_uri\r\n      SPRING_CLOUD_CONFIG_SERVER_GIT_DEFAULT_LABEL: develop\r\n      SPRING_CLOUD_CONFIG_SERVER_GIT_CLONE_ON_START: 'false'\r\n```\r\n###### TODO\r\n- add authentication configuration\r\nhttps://cloud.spring.io/spring-cloud-config/reference/html/#_git_ssh_configuration_using_properties\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}